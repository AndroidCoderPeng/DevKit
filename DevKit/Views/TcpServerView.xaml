<UserControl
    x:Class="DevKit.Views.TcpServerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:cvt="clr-namespace:DevKit.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:ut="clr-namespace:DevKit.Utils"
    xmlns:vm="clr-namespace:DevKit.ViewModels"
    Width="800"
    Height="600"
    d:DataContext="{d:DesignInstance Type=vm:TcpServerViewModel}"
    Background="{DynamicResource DevKitBackgroundBrush}"
    mc:Ignorable="d">

    <prism:Dialog.WindowStyle>
        <Style TargetType="Window">
            <Setter Property="prism:Dialog.WindowStartupLocation" Value="CenterScreen" />
            <Setter Property="SizeToContent" Value="WidthAndHeight" />
            <Setter Property="ResizeMode" Value="NoResize" />
        </Style>
    </prism:Dialog.WindowStyle>

    <UserControl.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="14" />
        </Style>

        <cvt:MessageTagBgConverter x:Key="MessageTagBgConverterKey" />
        <cvt:MessageTypeConverter x:Key="MessageTypeConverterKey" />
        <cvt:ListenStateConverter x:Key="ListenStateConverterKey" />
        <cvt:ConnectStateConverter x:Key="ConnectStateConverterKey" />
        <cvt:MessageTagConverter x:Key="MessageTagConverterKey" />
        <cvt:MessageCountConverter x:Key="MessageCountConverterKey" />
        <cvt:DeleteExCmdBtnVisibleConverter x:Key="DeleteExCmdBtnVisibleConverterKey" />
    </UserControl.Resources>

    <DockPanel Margin="10" LastChildFill="True">
        <!--  TCP 已连接的客户端列表  -->
        <Grid Width="260">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <DockPanel Grid.Row="0" LastChildFill="True">
                <TextBlock
                    Width="70"
                    VerticalAlignment="Center"
                    Text="本机地址" />

                <hc:TextBox
                    Margin="10,0"
                    VerticalAlignment="Center"
                    hc:InfoElement.Placeholder="127.0.0.1"
                    hc:InfoElement.ShowClearButton="True"
                    BorderBrush="{DynamicResource DevKitBorderBrush}"
                    Text="{Binding LocalHost}"
                    TextWrapping="NoWrap" />
            </DockPanel>

            <DockPanel
                Grid.Row="1"
                Margin="0,10"
                LastChildFill="True">
                <TextBlock
                    Width="70"
                    VerticalAlignment="Center"
                    Text="监听端口" />

                <hc:TextBox
                    Margin="10,0"
                    VerticalAlignment="Center"
                    hc:InfoElement.Placeholder="9000"
                    hc:InfoElement.ShowClearButton="True"
                    BorderBrush="{DynamicResource DevKitBorderBrush}"
                    MaxLength="5"
                    Text="{Binding LocalPort}"
                    TextWrapping="NoWrap" />
            </DockPanel>

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="70" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <DockPanel Grid.Column="0">
                    <TextBlock VerticalAlignment="Center" Text="状态" />

                    <Ellipse
                        Width="15"
                        Height="15"
                        Margin="15,0,0,0"
                        Fill="{Binding ListenStateColor}" />
                </DockPanel>

                <Button
                    Grid.Column="1"
                    Margin="10,0"
                    HorizontalAlignment="Stretch"
                    Command="{Binding ServerListenCommand}"
                    Content="{Binding ListenState}"
                    Style="{StaticResource ButtonPrimary}" />
            </Grid>

            <ListBox
                x:Name="ClientListBox"
                Grid.Row="3"
                Margin="0,10,10,0"
                HorizontalContentAlignment="Stretch"
                BorderBrush="{DynamicResource DevKitBorderBrush}"
                ItemsSource="{Binding ClientCollection}"
                ScrollViewer.CanContentScroll="False"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Height="40">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Ellipse
                                Grid.Column="0"
                                Width="15"
                                Height="15"
                                Margin="0,0,10,0"
                                Fill="{Binding IsConnected, Converter={StaticResource ConnectStateConverterKey}}" />

                            <TextBlock Grid.Column="1" VerticalAlignment="Center">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}:{1}">
                                        <Binding Path="Ip" />
                                        <Binding Path="Port" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>

                            <Border
                                Grid.Column="2"
                                Width="18"
                                Height="18"
                                Background="Red"
                                CornerRadius="9"
                                Visibility="{Binding MessageCount, Converter={StaticResource MessageTagConverterKey}}">
                                <TextBlock
                                    VerticalAlignment="Center"
                                    FontSize="8"
                                    Foreground="White"
                                    Text="{Binding MessageCount, Converter={StaticResource MessageCountConverterKey}}"
                                    TextAlignment="Center" />
                            </Border>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>

                <!--  自动滑动到最底部  -->
                <b:Interaction.Behaviors>
                    <ut:AutoScrollToBottomBehavior />
                </b:Interaction.Behaviors>

                <ListBox.ItemContainerStyle>
                    <Style BasedOn="{StaticResource ListBoxItemBaseStyle}" TargetType="ListBoxItem">
                        <EventSetter Event="PreviewMouseDown" Handler="ClientListBox_ListBoxItem_PreviewMouseDown" />
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </Grid>

        <!--  TCP 客户端 通信界面  -->
        <Grid>
            <Grid Margin="0,10,10,10" Visibility="{Binding IsContentViewVisible}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Border Grid.Column="0">
                        <TextBlock
                            FontWeight="Bold"
                            Text="{Binding ConnectedClientAddress}"
                            TextWrapping="NoWrap" />
                    </Border>

                    <CheckBox
                        Grid.Column="1"
                        Margin="10,0,0,0"
                        Command="{Binding ShowHexCheckBoxClickCommand}"
                        Content="HEX显示"
                        IsChecked="{Binding ShowHex}" />
                </Grid>

                <ListBox
                    x:Name="MessageListBox"
                    Grid.Row="1"
                    Margin="0,10"
                    ItemsSource="{Binding MessageCollection}"
                    ScrollViewer.CanContentScroll="False"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <StackPanel Grid.Row="0" Orientation="Horizontal">
                                    <Border Background="{Binding IsSend, Converter={StaticResource MessageTagBgConverterKey}}" CornerRadius="3">
                                        <TextBlock
                                            Margin="3,1"
                                            FontSize="10"
                                            FontWeight="Light"
                                            Foreground="White"
                                            Text="{Binding IsSend, Converter={StaticResource MessageTypeConverterKey}}" />
                                    </Border>

                                    <TextBlock
                                        Margin="5,0,0,0"
                                        VerticalAlignment="Center"
                                        FontSize="12"
                                        Text="{Binding Time, StringFormat=[{0}]}" />
                                </StackPanel>

                                <TextBlock
                                    Grid.Row="1"
                                    Margin="0,2,0,0"
                                    FontSize="12"
                                    Text="{Binding Content}"
                                    TextWrapping="Wrap">
                                    <TextBlock.ContextMenu>
                                        <ContextMenu Style="{x:Null}">
                                            <MenuItem
                                                Click="MessageItem_RightClick"
                                                Header="复制"
                                                Style="{x:Null}" />
                                        </ContextMenu>
                                    </TextBlock.ContextMenu>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>

                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border x:Name="ItemContainerBorder" Padding="3">
                                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                                        </Border>

                                        <!-- <ControlTemplate.Triggers> -->
                                        <!--     <Trigger Property="IsMouseOver" Value="True"> -->
                                        <!--         <Setter TargetName="ItemContainerBorder" Property="Background" Value="{DynamicResource BackgroundBrush}" /> -->
                                        <!--     </Trigger> -->
                                        <!-- </ControlTemplate.Triggers> -->
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>

                    <!--  自动滑动到最底部  -->
                    <b:Interaction.Behaviors>
                        <ut:AutoScrollToBottomBehavior />
                    </b:Interaction.Behaviors>
                </ListBox>

                <Grid Grid.Row="2" Margin="0,0,0,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <ComboBox
                        x:Name="ExCommandComboBox"
                        Grid.Column="0"
                        HorizontalContentAlignment="Stretch"
                        FontSize="14"
                        ItemsSource="{Binding ExCommandCollection}"
                        SelectedIndex="0">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock
                                        Grid.Column="0"
                                        VerticalAlignment="Center"
                                        Text="{Binding Annotation}" />

                                    <Button
                                        Grid.Column="1"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        Command="{Binding DataContext.DeleteExCmdCommand, ElementName=ExCommandComboBox}"
                                        CommandParameter="{Binding Id}"
                                        Content="&#xe6dc;"
                                        FontFamily="/DevKit;component/Fonts/#iconfont"
                                        FontSize="16"
                                        Visibility="{Binding Annotation, Converter={StaticResource DeleteExCmdBtnVisibleConverterKey}}" />
                                </Grid>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>

                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="DropDownOpened">
                                <b:InvokeCommandAction Command="{Binding DropDownOpenedCommand}" />
                            </b:EventTrigger>

                            <b:EventTrigger EventName="DropDownClosed">
                                <b:InvokeCommandAction Command="{Binding DropDownClosedCommand}" CommandParameter="{Binding ElementName=ExCommandComboBox}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ComboBox>

                    <Button
                        Grid.Column="1"
                        Margin="10,0"
                        Command="{Binding AddExtensionCommand}"
                        Content="&#xe6aa;"
                        FontFamily="/DevKit;component/Fonts/#iconfont"
                        ToolTip="添加扩展指令" />

                    <CheckBox
                        x:Name="LoopCheckBox"
                        Grid.Column="2"
                        Content="循环发送"
                        IsChecked="{Binding LoopSend}">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Unchecked">
                                <b:InvokeCommandAction Command="{Binding LoopUncheckedCommand}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </CheckBox>

                    <TextBox
                        Grid.Column="3"
                        Margin="10,0"
                        FontSize="14"
                        IsEnabled="{Binding ElementName=LoopCheckBox, Path=IsChecked}"
                        MaxLength="5"
                        Text="{Binding CommandInterval}" />

                    <TextBlock
                        Grid.Column="4"
                        VerticalAlignment="Center"
                        Text="ms/次" />
                </Grid>

                <Grid Grid.Row="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBox
                        Grid.Column="0"
                        Padding="4"
                        VerticalContentAlignment="Top"
                        FontSize="14"
                        Text="{Binding UserInputText}"
                        TextWrapping="Wrap"
                        VerticalScrollBarVisibility="Auto" />

                    <Grid Grid.Column="1" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <CheckBox
                            Grid.Row="0"
                            Content="HEX发送"
                            IsChecked="{Binding SendHex}" />

                        <Button
                            Grid.Row="1"
                            Margin="0,10"
                            HorizontalAlignment="Stretch"
                            Command="{Binding ClearMessageCommand}"
                            Content="清屏" />

                        <Button
                            Grid.Row="2"
                            HorizontalAlignment="Stretch"
                            BorderThickness="0"
                            Command="{Binding SendMessageCommand}"
                            Content="发送" />
                    </Grid>
                </Grid>
            </Grid>

            <Grid Margin="0,10,10,10" Visibility="{Binding IsEmptyImageVisible}">
                <Grid.Background>
                    <ImageBrush ImageSource="/DevKit;component/Images/empty.png" Stretch="Uniform" />
                </Grid.Background>
            </Grid>
        </Grid>
    </DockPanel>
</UserControl>
