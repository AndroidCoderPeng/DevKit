<UserControl
    x:Class="DevKit.Views.UdpServerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:cvt="clr-namespace:DevKit.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ut="clr-namespace:DevKit.Utils"
    xmlns:vm="clr-namespace:DevKit.ViewModels"
    d:DataContext="{d:DesignInstance Type=vm:UdpServerViewModel}"
    d:DesignHeight="560"
    d:DesignWidth="600"
    Background="white"
    mc:Ignorable="d">

    <UserControl.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="14" />
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="FontSize" Value="14" />
        </Style>

        <cvt:MessageTagBgConverter x:Key="MessageTagBgConverterKey" />
        <cvt:MessageTypeConverter x:Key="MessageTypeConverterKey" />
        <cvt:ListenStateConverter x:Key="ListenStateConverterKey" />
        <cvt:MessageTagConverter x:Key="MessageTagConverterKey" />
        <cvt:MessageCountConverter x:Key="MessageCountConverterKey" />
        <cvt:DeleteExCmdBtnVisibleConverter x:Key="DeleteExCmdBtnVisibleConverterKey" />
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="1.5*" />
        </Grid.ColumnDefinitions>

        <!--  UDP 已连接的客户端列表  -->
        <Grid Grid.Column="0" Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <TextBlock
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="本机地址" />

                <hc:ComboBox
                    Grid.Column="1"
                    Margin="10,0,0,0"
                    IsEnabled="{Binding Content, ElementName=ListenStateButton, Converter={StaticResource ListenStateConverterKey}}"
                    ItemsSource="{Binding LocalAddressCollection}"
                    SelectedIndex="0" />
            </Grid>

            <Grid Grid.Row="1" Margin="0,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="监听端口" />

                <hc:TextBox
                    Grid.Column="1"
                    MinWidth="90"
                    Margin="10,0"
                    hc:InfoElement.Placeholder="端口"
                    hc:InfoElement.ShowClearButton="True"
                    IsEnabled="{Binding Content, ElementName=ListenStateButton, Converter={StaticResource ListenStateConverterKey}}"
                    MaxLength="4"
                    Text="{Binding ListenPort}"
                    TextWrapping="NoWrap" />

                <Ellipse
                    Grid.Column="2"
                    Width="18"
                    Height="18"
                    Margin="0,0,10,0"
                    Fill="{Binding ListenStateColor}" />

                <Button
                    x:Name="ListenStateButton"
                    Grid.Column="3"
                    Command="{Binding ServerListenCommand}"
                    Content="{Binding ListenState}"
                    Style="{StaticResource ButtonPrimary}" />
            </Grid>

            <ListBox
                x:Name="ClientListBox"
                Grid.Row="2"
                HorizontalContentAlignment="Stretch"
                ItemsSource="{Binding ClientCollection}"
                ScrollViewer.CanContentScroll="False"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled">

                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="SelectionChanged">
                        <b:InvokeCommandAction Command="{Binding ClientItemSelectionChangedCommand}" CommandParameter="{Binding SelectedItem, ElementName=ClientListBox}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Height="45">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                FontSize="14">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}:{1}">
                                        <Binding Path="Ip" />
                                        <Binding Path="Port" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>

                            <Border
                                Grid.Column="1"
                                Width="24"
                                Height="18"
                                Background="Red"
                                CornerRadius="9"
                                Visibility="{Binding MessageCount, Converter={StaticResource MessageTagConverterKey}}">
                                <TextBlock
                                    VerticalAlignment="Center"
                                    FontSize="10"
                                    Foreground="White"
                                    Text="{Binding MessageCount, Converter={StaticResource MessageCountConverterKey}}"
                                    TextAlignment="Center" />
                            </Border>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>

                <!--  自动滑动到最底部  -->
                <b:Interaction.Behaviors>
                    <ut:AutoScrollToBottomBehavior />
                </b:Interaction.Behaviors>
            </ListBox>
        </Grid>

        <!--  UDP 客户端 通信界面  -->
        <Grid
            Grid.Column="1"
            Margin="0,10,10,10"
            Visibility="{Binding IsContentViewVisible}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0" Style="{StaticResource BorderTipSuccess}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="已连接" />

                        <TextBlock
                            Grid.Column="1"
                            Margin="10,0"
                            FontWeight="Bold"
                            Foreground="{DynamicResource SuccessBrush}"
                            Text="{Binding ConnectedClientAddress}"
                            TextWrapping="NoWrap" />
                    </Grid>
                </Border>

                <CheckBox
                    Grid.Column="1"
                    Margin="10,0,0,0"
                    Content="HEX显示"
                    IsChecked="{Binding ShowHex}">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="Checked">
                            <b:InvokeCommandAction Command="{Binding ShowHexCheckedCommand}" />
                        </b:EventTrigger>

                        <b:EventTrigger EventName="Unchecked">
                            <b:InvokeCommandAction Command="{Binding ShowHexUncheckedCommand}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </CheckBox>
            </Grid>

            <ListBox
                x:Name="MessageListBox"
                Grid.Row="1"
                Margin="0,10"
                ItemsSource="{Binding MessageCollection}"
                ScrollViewer.CanContentScroll="False"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <StackPanel Grid.Row="0" Orientation="Horizontal">
                                <Border Background="{Binding IsSend, Converter={StaticResource MessageTagBgConverterKey}}" CornerRadius="3">
                                    <TextBlock
                                        Margin="3,1"
                                        FontSize="10"
                                        FontWeight="Light"
                                        Foreground="White"
                                        Text="{Binding IsSend, Converter={StaticResource MessageTypeConverterKey}}" />
                                </Border>

                                <TextBlock
                                    Margin="5,0,0,0"
                                    VerticalAlignment="Center"
                                    FontSize="12"
                                    Foreground="{DynamicResource SecondaryTextBrush}"
                                    Text="{Binding Time, StringFormat=[{0}]}" />
                            </StackPanel>

                            <TextBlock
                                Grid.Row="1"
                                Margin="0,2,0,0"
                                FontSize="12"
                                Text="{Binding Content}"
                                TextWrapping="Wrap">
                                <TextBlock.ContextMenu>
                                    <ContextMenu Style="{x:Null}">
                                        <MenuItem
                                            Click="MenuItem_Click"
                                            Header="复制"
                                            Style="{x:Null}" />
                                    </ContextMenu>
                                </TextBlock.ContextMenu>
                            </TextBlock>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>

                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="ItemContainerBorder" Padding="3">
                                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="ItemContainerBorder" Property="Background" Value="{DynamicResource BackgroundBrush}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>

                <!--  自动滑动到最底部  -->
                <b:Interaction.Behaviors>
                    <ut:AutoScrollToBottomBehavior />
                </b:Interaction.Behaviors>
            </ListBox>

            <Grid Grid.Row="2" Margin="0,0,0,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <ComboBox
                    x:Name="ExCommandComboBox"
                    Grid.Column="0"
                    HorizontalContentAlignment="Stretch"
                    ItemsSource="{Binding ExCommandCollection}"
                    SelectedIndex="0">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <TextBlock
                                    Grid.Column="0"
                                    VerticalAlignment="Center"
                                    Text="{Binding Annotation}" />

                                <Button
                                    Grid.Column="1"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    Command="{Binding DataContext.DeleteExCmdCommand, ElementName=ExCommandComboBox}"
                                    CommandParameter="{Binding Id}"
                                    Content="&#xe6dc;"
                                    FontFamily="/DevKit;component/Fonts/#iconfont"
                                    FontSize="16"
                                    Foreground="{DynamicResource DangerBrush}"
                                    Visibility="{Binding Annotation, Converter={StaticResource DeleteExCmdBtnVisibleConverterKey}}" />
                            </Grid>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>

                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="DropDownOpened">
                            <b:InvokeCommandAction Command="{Binding DropDownOpenedCommand}" />
                        </b:EventTrigger>

                        <b:EventTrigger EventName="DropDownClosed">
                            <b:InvokeCommandAction Command="{Binding DropDownClosedCommand}" CommandParameter="{Binding ElementName=ExCommandComboBox}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </ComboBox>

                <Button
                    Grid.Column="1"
                    Margin="10,0"
                    Command="{Binding AddExtensionCommand}"
                    Content="&#xe6aa;"
                    FontFamily="/DevKit;component/Fonts/#iconfont"
                    Foreground="{DynamicResource PrimaryBrush}"
                    ToolTip="添加扩展指令" />

                <CheckBox
                    x:Name="LoopCheckBox"
                    Grid.Column="2"
                    Content="循环发送"
                    IsChecked="{Binding LoopSend}">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="Unchecked">
                            <b:InvokeCommandAction Command="{Binding LoopUncheckedCommand}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </CheckBox>

                <hc:TextBox
                    Grid.Column="3"
                    Margin="10,0"
                    IsEnabled="{Binding ElementName=LoopCheckBox, Path=IsChecked}"
                    MaxLength="5"
                    Text="{Binding CommandInterval}" />

                <TextBlock
                    Grid.Column="4"
                    VerticalAlignment="Center"
                    Text="ms/次" />
            </Grid>

            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <hc:TextBox
                    Grid.Column="0"
                    Padding="4"
                    VerticalContentAlignment="Top"
                    Text="{Binding UserInputText}"
                    TextWrapping="Wrap"
                    VerticalScrollBarVisibility="Auto" />

                <Grid Grid.Column="1" Margin="10,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <CheckBox
                        Grid.Row="0"
                        Content="HEX"
                        IsChecked="{Binding SendHex}" />

                    <Button
                        Grid.Row="1"
                        Margin="0,7"
                        HorizontalAlignment="Stretch"
                        Command="{Binding ClearMessageCommand}"
                        Content="清屏" />

                    <Button
                        Grid.Row="2"
                        Background="{DynamicResource BackgroundBrush}"
                        BorderThickness="0"
                        Command="{Binding SendMessageCommand}"
                        Content="发送"
                        Foreground="{DynamicResource SuccessBrush}" />
                </Grid>
            </Grid>
        </Grid>

        <Grid
            Grid.Column="1"
            Margin="0,10,10,10"
            Visibility="{Binding IsEmptyImageVisible}">
            <Grid.Background>
                <ImageBrush ImageSource="/DevKit;component/Images/empty.png" Stretch="Uniform" />
            </Grid.Background>
        </Grid>
    </Grid>
</UserControl>
