<UserControl
    x:Class="DevKit.Views.SerialPortView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:cvt="clr-namespace:DevKit.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ut="clr-namespace:DevKit.Utils"
    xmlns:vm="clr-namespace:DevKit.ViewModels"
    d:DataContext="{d:DesignInstance Type=vm:SerialPortViewModel}"
    d:DesignHeight="560"
    d:DesignWidth="600"
    Background="white"
    mc:Ignorable="d">

    <UserControl.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="14" />
        </Style>

        <cvt:MessageTagBgConverter x:Key="MessageTagBgConverterKey" />
        <cvt:SerialPortStateConverter x:Key="SerialPortStateConverterKey" />
        <cvt:MessageTypeConverter x:Key="MessageTypeConverterKey" />
        <cvt:DeleteExCmdBtnVisibleConverter x:Key="DeleteExCmdBtnVisibleConverterKey" />
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <ListBox
            x:Name="MessageListBox"
            Grid.Row="0"
            Margin="10"
            ItemsSource="{Binding MessageCollection}"
            ScrollViewer.CanContentScroll="False"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Row="0" Orientation="Horizontal">
                            <Border Background="{Binding IsSend, Converter={StaticResource MessageTagBgConverterKey}}" CornerRadius="3">
                                <TextBlock
                                    Margin="3,1"
                                    FontSize="10"
                                    FontWeight="Light"
                                    Foreground="White"
                                    Text="{Binding IsSend, Converter={StaticResource MessageTypeConverterKey}}" />
                            </Border>

                            <TextBlock
                                Margin="5,0,0,0"
                                VerticalAlignment="Center"
                                FontSize="12"
                                Foreground="{DynamicResource SecondaryTextBrush}"
                                Text="{Binding Time, StringFormat=[{0}]}" />
                        </StackPanel>

                        <TextBlock
                            Grid.Row="1"
                            Margin="0,2,0,0"
                            FontSize="12"
                            Text="{Binding Content}"
                            TextWrapping="Wrap">
                            <TextBlock.ContextMenu>
                                <ContextMenu Style="{x:Null}">
                                    <MenuItem
                                        Click="MenuItem_Click"
                                        Header="复制"
                                        Style="{x:Null}" />
                                </ContextMenu>
                            </TextBlock.ContextMenu>
                        </TextBlock>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>

            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="ItemContainerBorder" Padding="3">
                                    <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="ItemContainerBorder" Property="Background" Value="{DynamicResource BackgroundBrush}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>

            <!--  自动滑动到最底部  -->
            <b:Interaction.Behaviors>
                <ut:AutoScrollToBottomBehavior />
            </b:Interaction.Behaviors>
        </ListBox>

        <Grid Grid.Row="1" Margin="10,0,10,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="3*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" IsEnabled="{Binding ButtonState, Converter={StaticResource SerialPortStateConverterKey}}">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <DockPanel Grid.Row="0" LastChildFill="True">
                    <TextBlock
                        Width="60"
                        VerticalAlignment="Center"
                        Text="串口名：" />

                    <ComboBox
                        x:Name="PortComboBox"
                        VerticalAlignment="Center"
                        FontSize="14"
                        ItemsSource="{Binding PortArray}"
                        SelectedIndex="0">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="SelectionChanged">
                                <b:InvokeCommandAction Command="{Binding PortItemSelectedCommand}" CommandParameter="{Binding SelectedItem, ElementName=PortComboBox}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ComboBox>
                </DockPanel>

                <DockPanel
                    Grid.Row="1"
                    Margin="0,10"
                    LastChildFill="True">
                    <TextBlock
                        Width="60"
                        VerticalAlignment="Center"
                        Text="波特率：" />

                    <ComboBox
                        x:Name="BaudRateComboBox"
                        FontSize="14"
                        ItemsSource="{Binding BaudRateArray}"
                        SelectedIndex="0">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="SelectionChanged">
                                <b:InvokeCommandAction Command="{Binding BaudRateItemSelectedCommand}" CommandParameter="{Binding SelectedItem, ElementName=BaudRateComboBox}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ComboBox>
                </DockPanel>

                <DockPanel Grid.Row="2" LastChildFill="True">
                    <TextBlock
                        Width="60"
                        VerticalAlignment="Center"
                        Text="数据位：" />

                    <ComboBox
                        x:Name="DataBitComboBox"
                        VerticalAlignment="Center"
                        FontSize="14"
                        ItemsSource="{Binding DataBitArray}"
                        SelectedIndex="3">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="SelectionChanged">
                                <b:InvokeCommandAction Command="{Binding DataBitItemSelectedCommand}" CommandParameter="{Binding SelectedItem, ElementName=DataBitComboBox}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ComboBox>
                </DockPanel>

                <DockPanel
                    Grid.Row="3"
                    Margin="0,10"
                    LastChildFill="True">
                    <TextBlock
                        Width="60"
                        VerticalAlignment="Center"
                        Text="校验位：" />

                    <ComboBox
                        x:Name="ParityComboBox"
                        VerticalAlignment="Center"
                        FontSize="14"
                        ItemsSource="{Binding ParityArray}"
                        SelectedIndex="0">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="SelectionChanged">
                                <b:InvokeCommandAction Command="{Binding ParityItemSelectedCommand}" CommandParameter="{Binding SelectedItem, ElementName=ParityComboBox}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ComboBox>
                </DockPanel>

                <DockPanel Grid.Row="4" LastChildFill="True">
                    <TextBlock
                        Width="60"
                        VerticalAlignment="Center"
                        Text="停止位：" />

                    <ComboBox
                        x:Name="StopBitComboBox"
                        VerticalAlignment="Center"
                        FontSize="14"
                        ItemsSource="{Binding StopBitArray}"
                        SelectedIndex="0">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="SelectionChanged">
                                <b:InvokeCommandAction Command="{Binding StopBitItemSelectedCommand}" CommandParameter="{Binding SelectedItem, ElementName=StopBitComboBox}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ComboBox>
                </DockPanel>
            </Grid>

            <Grid Grid.Column="1" Margin="10,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Button
                        Grid.Column="0"
                        HorizontalAlignment="Stretch"
                        Command="{Binding OpenSerialPortCommand}"
                        Style="{StaticResource ButtonPrimary}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <Ellipse
                                Grid.Column="0"
                                Width="15"
                                Height="15"
                                Fill="{Binding ConnectionStateColor}" />

                            <TextBlock
                                Grid.Column="1"
                                Margin="10,0,0,0"
                                Text="{Binding ButtonState}" />
                        </Grid>
                    </Button>

                    <Button
                        Grid.Column="1"
                        Margin="10,0"
                        HorizontalAlignment="Stretch"
                        Command="{Binding ClearMessageCommand}"
                        Content="清空数据" />

                    <CheckBox
                        x:Name="LoopCheckBox"
                        Grid.Column="2"
                        Content="循环发送"
                        IsChecked="{Binding LoopSend}">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Unchecked">
                                <b:InvokeCommandAction Command="{Binding LoopUncheckedCommand}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </CheckBox>

                    <hc:TextBox
                        Grid.Column="3"
                        Margin="10,0"
                        FontSize="14"
                        IsEnabled="{Binding ElementName=LoopCheckBox, Path=IsChecked}"
                        MaxLength="5"
                        Text="{Binding CommandInterval}" />

                    <TextBlock
                        Grid.Column="4"
                        VerticalAlignment="Center"
                        Text="ms/次" />

                    <CheckBox
                        Grid.Column="5"
                        Margin="10,0,0,0"
                        Command="{Binding ShowHexCheckBoxClickCommand}"
                        Content="HEX显示"
                        IsChecked="{Binding ShowHex}" />
                </Grid>

                <Grid Grid.Row="1" Margin="0,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <ComboBox
                        x:Name="ExCommandComboBox"
                        Grid.Column="0"
                        HorizontalContentAlignment="Stretch"
                        FontSize="14"
                        ItemsSource="{Binding ExCommandCollection}"
                        SelectedIndex="0">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock
                                        Grid.Column="0"
                                        VerticalAlignment="Center"
                                        Text="{Binding Annotation}" />

                                    <Button
                                        Grid.Column="1"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        Command="{Binding DataContext.DeleteExCmdCommand, ElementName=ExCommandComboBox}"
                                        CommandParameter="{Binding Id}"
                                        Content="&#xe6dc;"
                                        FontFamily="/DevKit;component/Fonts/#iconfont"
                                        FontSize="16"
                                        Foreground="{DynamicResource DangerBrush}"
                                        Visibility="{Binding Annotation, Converter={StaticResource DeleteExCmdBtnVisibleConverterKey}}" />
                                </Grid>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>

                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="DropDownOpened">
                                <b:InvokeCommandAction Command="{Binding DropDownOpenedCommand}" />
                            </b:EventTrigger>

                            <b:EventTrigger EventName="DropDownClosed">
                                <b:InvokeCommandAction Command="{Binding DropDownClosedCommand}" CommandParameter="{Binding ElementName=ExCommandComboBox}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ComboBox>

                    <Button
                        Grid.Column="1"
                        Margin="10,0"
                        Command="{Binding AddExtensionCommand}"
                        Content="添加扩展指令" />

                    <CheckBox
                        Grid.Column="2"
                        Content="HEX发送"
                        IsChecked="{Binding SendHex}">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Checked">
                                <b:InvokeCommandAction Command="{Binding SendHexCheckedCommand}" />
                            </b:EventTrigger>

                            <b:EventTrigger EventName="Unchecked">
                                <b:InvokeCommandAction Command="{Binding SendHexUncheckedCommand}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </CheckBox>

                    <Button
                        Grid.Column="3"
                        Margin="10,0,0,0"
                        Background="{DynamicResource BackgroundBrush}"
                        BorderThickness="0"
                        Command="{Binding SendMessageCommand}"
                        Content="发送"
                        Foreground="{DynamicResource SuccessBrush}" />
                </Grid>

                <hc:TextBox
                    Grid.Row="2"
                    Padding="6,4"
                    VerticalContentAlignment="Top"
                    FontSize="14"
                    Text="{Binding UserInputText}"
                    TextWrapping="Wrap"
                    VerticalScrollBarVisibility="Auto" />
            </Grid>
        </Grid>
    </Grid>
</UserControl>